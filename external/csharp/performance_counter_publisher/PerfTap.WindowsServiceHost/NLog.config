<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" 
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true" internalLogLevel="Warn" internalLogFile="C:\ProgramData\PerfTap\logs\nlog-log.log">

  <variable name="Application" value="PerfTap" />
  <variable name="LogFilePath" value="${specialfolder:folder=CommonApplicationData}\${Application}\logs\${shortdate}.log" />
  
  <variable name="ExceptionLayout" value="${exception:format=type,message,method:maxInnerExceptionLevel=5:innerFormat=shortType,message,method} (${stacktrace:topFrames=10})" />
  <variable name="VerboseLayout" value="[${level:upperCase=true}] ${machinename} ${longdate} | ${message} | ${logger} | (${callsite:className=true:methodName=true:includSourcePath=true}) ${onexception:${ExceptionLayout}}" />

  <variable name="ExceptionLayoutWithNewLines" value="${newline}EXCEPTION\: ${exception:format=tostring:maxInnerExceptionLevel=5:innerFormat=tostring}${newline}
Stack Trace\: (${stacktrace:topFrames=10})" />

  <variable name="VerboseLayoutWithNewLines" value="[${level:upperCase=true}]${newline}
Machine: ${machinename}${newline}
${longdate}${newline}
Logger: ${logger}${newline}
Message: ${message}${newline}${newline}
Call site: (${callsite:className=true:methodName=true:includSourcePath=true})
${onexception:${ExceptionLayoutWithNewLines}}"/>  

  <!-- 
  See http://nlog-project.org/wiki/Configuration_file 
  for information on customizing logging rules and outputs.
   -->

  <targets async="true">
    <!-- console logging -->
    <target name="console" xsi:type="ColoredConsole" layout="${VerboseLayout}"/>

    <!-- file logging -->
    <target name="file" xsi:type="File" fileName="${LogFilePath}" layout="${VerboseLayout}" />

    <!-- managed debugger logging -->
    <target name="managedDebugger" xsi:type="Debugger" layout="${VerboseLayoutWithNewLines}" />

    <!-- event log -->
    <target name="eventLog" xsi:type="EventLog" source="${Application}" layout="${VerboseLayoutWithNewLines}" />

    <!-- buffer output -->
    <wrapper-target xsi:type="BufferingWrapper" name="bufferedOutputs">
      <!-- during normal execution only log Info messages -->
      <wrapper-target xsi:type="PostFilteringWrapper" defaultFilter="level >= LogLevel.Info">
        <compound-target xsi:type="SplitGroup">
          <target-ref name="console" />
          <target-ref name="file" />
          <target-ref name="managedDebugger" />
          <target-ref name="eventLog" />
        </compound-target>
        <!-- if there is at least one error, log everything from trace level -->
        <when exists="level >= LogLevel.Error" filter="level >= LogLevel.Trace" />
      </wrapper-target>
    </wrapper-target>
  </targets>
  <rules>
    <!-- to use buffered outputs -->
    <!-- <logger name="*" minlevel="Trace" writeTo="bufferedOutputs" /> -->
    <logger name="*" minlevel="Info" writeTo="file" /> <!-- managedDebugger, console, eventLog -->
  </rules>
</nlog>