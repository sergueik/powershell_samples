<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABW
        CAAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECYAASgCAQE6AUwBFgEMAbYBQwEWAQUBvQFEARwBBgG9AUwBHgEOAbYBKgIB
        AT3oAAEyAQIBAQFOAT0BbwEtAfQBEwGUAR4B/wEjAa0BMAH/AUABlgE7AfUBNAEDAQIBUugAATIBAgEB
        AU4BOAF6ASYB9AETAa8BIAH/ASwBygE7Af8BQgGoAT0B9QE0AQMBAQFS6AABMgECAQEBTgE4AX4BJwH0
        ARUBsAEiAf8BLwHMAT8B/wFDAawBPwH1ATQBAwEBAVLoAAExAQIBAQFNATkBfwEmAfMBEgGrAR8B/wEp
        AcYBOQH/AUABqgE7AfUBMwEDAQEBUdQAASYCAQE3AS0CAQFEAS0CAQFEAS0BAgEBAUQBKwIBAUEBRAEH
        AQMBfQE7AYsBLgH2AQwBnAEYAf8BGgG4ASoB/wE6AakBOwH3AUUBCwEEAYABLAECAQEBQQEtAQIBAQFE
        AS0BAgEBAUQBLQECAQEBRAEmAgEBNwEGAgEBBgEeAgEBKQEiAgEBMAEiAgEBMAEiAgEBMAEiAgEBMAEi
        AgEBMAEiAgEBMAEiAgEBMAEiAgEBMAEiAgEBMAEiAgEBMAEiAgEBMAEiAgEBMAEeAgEBKQEGAgEBBoAA
        AUsBHQEPAb8BJQFgARcB8AEfAWMBDwHvAR8BagEQAe8BHwFxARIB7wElAYMBHAHzAScBqAEtAf8BCgGH
        ARUB/wEXAaYBJQH/AUgBxQFTAf8BVQGfAUsB9AFWAZMBRAHvAVkBkgFFAe8BWAGNAUQB7wFVAYQBRQHw
        AVABKQEVAcEBGgIBASMBSQEPAT8BxAE5ARcBfgHnAToBFQF4AeUBOgEVAXYB5QE6ARQBcwHlATgBDwFj
        AeUBNgENAVsB5QE4AQ4BZAHlATgBFAF0AeUBOgEaAXkB5QE7AR4BeQHlAT8BIgF2AeUBPQEnAXkB5wFL
        ARQBOgHEARoCAQEjgAABPQEcAQgBywEHAXkBEgH/AQQBlAESAf8BDQGtARwB/wEWAbkBJQH/ARkBuQEo
        Af8BHQGtASsB/wEmAZgBMQH/ATMBmwE9Af8BRAGzAU4B/wFUAcMBXQH/AV4BywFoAf8BZAHNAW0B/wFm
        AcoBbwH/AWABtwFoAf8BSAEsARQBzgEdAgEBJwFAARABYQHaAR4BHAHEAf8BHgEaAcIB/wEfARkBuwH/
        AR8BFwGtAf8BGwEUAZYB/wEYAREBhwH/ARcBEgGNAf8BGQEXAaYB/wEcAR4BvAH/AR8BJgHGAf8BIwEv
        AckB/wEmATUBywH/AUIBGAFeAdoBHQIBASeAAAE8AR4BBwHLAQoBhgEWAf8BGAGyAScB/wE3Ac4BRQH/
        AVAB3QFdAf8BWgHfAWcB/wFUAdMBYAH/AUYBvgFSAf8BQQGiAUsB/wFHAZwBUAH/AU8BqQFYAf8BVwGy
        AWAB/wFdAbUBZgH/AWQBtAFsAf8BYgGkAWkB/wFIASQBEwHOAR0CAQEnAUEBFQFjAdoBJAEvAckB/wEl
        ATAByQH/ASUBLwHJAf8BIgEpAcUB/wEdAR8BuQH/ARgBFgGhAf8BFAETAYoB/wIVAYsB/wEZARoBpAH/
        AR0BIQG3Af8BIAEnAcEB/wEjASwBxgH/AUEBFgFjAdoBHQIBASeAAAFIASYBEQHHASwBlAEwAfsBRAGv
        AUcB+gFfAcYBYQH6AXIB1AF0AfoBeAHZAXsB+wF8AegBgwH/AWIB1AFsAf8BUgG5AVwB/wFmAa8BbAH/
        AWMBnQFjAfsBYQGXAV8B+gFlAZYBZAH6AWkBlAFnAfoBbAGTAWoB+wFVAScBHQHKARoCAQEjAU4BFgFE
        AcQBSAExAYcB5wFJATEBgwHlAUYBLAGDAeUBQQElAYMB5QE7AR0BgAHlATYBEwF2AeUBMwEOAWsB5QE4
        ARUBbAHlATsBHQF4AeUBPgEeAX0B5QFAAR8BggHlAT0BIgGHAecBUQEYAUcBxAEaAgEBI4AAATMCAgFP
        ATwBBAECAWUBPAEEAQIBZQE8AQUBAgFlATsBBQECAWMBTAEVAQkBlAFyAcMBbgH4AXUB4AF/Af8BYgHH
        AWsB/wFmAZ8BYQH5AU0BEAEJAZYBOwEDAQIBYwE8AQMBAgFlATwBAwECAWUBPQIDAWUBNAICAVABBgIB
        AQYBHgIBASkBIgIBATABIgIBATABIgIBATABIgIBATABIgIBATABIgIBATABIgIBATABIgIBATABIgIB
        ATABIgIBATABIgIBATABIgIBATABHgIBASkBBgIBAQaUAAExAQIBAQFNAWsBrQFeAfMBfAHhAYQB/wFs
        AckBdAH/AVsBiQFRAfUBMwECAQEBUegAATIBAgEBAU4BaQGlAV0B9AF7AdkBggH/AXIBxAF6Af8BYQGG
        AVQB9QE0AQIBAQFS6AABMgECAQEBTgFjAZoBVwH0AXkBywGBAf8BewG8AYEB/wFnAYUBWgH1ATQBAgEB
        AVLoAAEyAQIBAQFOAWMBiwFWAfQBeQG2AX8B/wF/AbQBgwH/AW4BhQFhAfUBNAICAVLoAAEuAgIBRQFU
        ATwBJgHWAUsBQQEkAeABTAE9ASUB4AFbAT0BLgHYAS8CAgFI1AABQgFNAT4HAAE+AwABKAMAAUADAAEQ
        AwABAQEAAQEFAAGAFwAD/wEAAfgBHwL/BAAB+AEfAv8EAAH4AR8C/wQAAfgBHwL/BAAB+AEfAv80AAH4
        AR8C/wQAAfgBHwL/BAAB+AEfAv8EAAH4AR8C/wQAAfgBHwL/BAAL
</value>
  </data>
</root>