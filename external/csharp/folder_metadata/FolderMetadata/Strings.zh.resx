<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ForceMnemonics" xml:space="preserve">
    <value>true</value>
    <comment>Value must be "true" or "false" as it is converted to a bool. It specifies if a language (e.g. Chinese or Japanese) is forced to show mnemonics.</comment>
  </data>
  <data name="FrmHelp_btnClose_Text" xml:space="preserve">
    <value>关 (&amp;C)</value>
  </data>
  <data name="FrmHelp_Configure_Description" xml:space="preserve">
    <value>打开作者（authors）或标记 （tags） 的配置。</value>
  </data>
  <data name="FrmHelp_Description" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="FrmHelp_Dir_Description" xml:space="preserve">
    <value>打开指定路径的配置对话框。 如果路径包含空格，请记住在路径两边加上双引号。</value>
  </data>
  <data name="FrmHelp_Example" xml:space="preserve">
    <value>例子</value>
  </data>
  <data name="FrmHelp_Help_Description" xml:space="preserve">
    <value>显示此帮助。</value>
  </data>
  <data name="FrmHelp_Introduction" xml:space="preserve">
    <value>%%NAME_NOEXE%% 允许编辑文件夹的元数据。它提供了几个命令行参数，如下表所述。请注意，Windows 资源管理器可能需要一些时间来更新其显示。</value>
  </data>
  <data name="FrmHelp_Lang_Description" xml:space="preserve">
    <value>&lt;span class="code"&gt;lang&lt;/span&gt; 选项可与任何其他选项一起使用。%%NAME_NOEXE%% 使用指定语言运行，如果 .NET 框架已识别并存在转换。</value>
  </data>
  <data name="FrmHelp_Option" xml:space="preserve">
    <value>选项</value>
  </data>
  <data name="FrmHelp_Register_Description" xml:space="preserve">
    <value>创建上下文菜单条目。</value>
  </data>
  <data name="FrmHelp_Title" xml:space="preserve">
    <value>帮助</value>
  </data>
  <data name="FrmHelp_Unregister_Description" xml:space="preserve">
    <value>删除上下文菜单条目。</value>
  </data>
  <data name="FrmMain_btnCancel_Text" xml:space="preserve">
    <value>取消 (&amp;C)</value>
  </data>
  <data name="FrmMain_btnSave_Text" xml:space="preserve">
    <value>保存到文件 (&amp;S)</value>
  </data>
  <data name="FrmMain_lblAuthor_Text" xml:space="preserve">
    <value>作者 (&amp;A):</value>
  </data>
  <data name="FrmMain_lblComment_Text" xml:space="preserve">
    <value>评论 (&amp;O):</value>
  </data>
  <data name="FrmMain_lblSubject_Text" xml:space="preserve">
    <value>主题 (&amp;U):</value>
  </data>
  <data name="FrmMain_lblTags_Text" xml:space="preserve">
    <value>标签 (&amp;G):</value>
  </data>
  <data name="FrmMain_lblTitle_Text" xml:space="preserve">
    <value>标题 (&amp;T):</value>
  </data>
  <data name="FrmMain_Manage" xml:space="preserve">
    <value>管理...</value>
  </data>
  <data name="FrmMain_ManageAuthors" xml:space="preserve">
    <value>管理作者</value>
  </data>
  <data name="FrmMain_ManageTags" xml:space="preserve">
    <value>管理标签</value>
  </data>
  <data name="FrmMain_Text" xml:space="preserve">
    <value>编辑文件夹元数据{0}</value>
  </data>
  <data name="FrmManage_btnAdd_Text" xml:space="preserve">
    <value>添加 (&amp;A)</value>
  </data>
  <data name="FrmManage_btnCancel_Text" xml:space="preserve">
    <value>取消 (&amp;C)</value>
  </data>
  <data name="FrmManage_btnDown_Text" xml:space="preserve">
    <value>向下 (&amp;D)</value>
  </data>
  <data name="FrmManage_btnRemove_Text" xml:space="preserve">
    <value>删除 (&amp;R)</value>
  </data>
  <data name="FrmManage_btnSave_Text" xml:space="preserve">
    <value>保存到文件 (&amp;S)</value>
  </data>
  <data name="FrmManage_btnUp_Text" xml:space="preserve">
    <value>向上 (&amp;U)</value>
  </data>
  <data name="FrmManage_chkSort_Text" xml:space="preserve">
    <value>按字母顺序排序</value>
  </data>
  <data name="FrmManage_DuplicateText" xml:space="preserve">
    <value>重复文本</value>
  </data>
  <data name="FrmManage_EntryAlreadyExists" xml:space="preserve">
    <value>条目"{0}"已存在。</value>
  </data>
  <data name="FrmSelectLanguage_btnOK_Text" xml:space="preserve">
    <value>&amp;OK</value>
  </data>
  <data name="FrmSelectLanguage_colLanguage_Text" xml:space="preserve">
    <value>語言</value>
  </data>
  <data name="FrmSelectLanguage_colName_Text" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="FrmSelectLanguage_Text" xml:space="preserve">
    <value>选择语言</value>
  </data>
  <data name="Registrator_ContextMenu" xml:space="preserve">
    <value>编辑元数据</value>
  </data>
  <data name="Registrator_CouldNotDelete" xml:space="preserve">
    <value>无法从以下帐户中删除以下注册表子 {0}:{1}</value>
  </data>
  <data name="Registrator_Error_UnableToOpenRegistryForWriting" xml:space="preserve">
    <value>无法打开注册表进行写入。您必须是此操作的管理员。</value>
  </data>
  <data name="Registrator_RegistryAccessError" xml:space="preserve">
    <value>注册表访问错误</value>
  </data>
  <data name="Registrator_UnregisterError" xml:space="preserve">
    <value>取消注册错误</value>
  </data>
</root>